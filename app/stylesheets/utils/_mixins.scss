@mixin hero($url) {
	width: 100%;
	background-repeat: no-repeat;
	background-position: center center;
	background-size: cover;
	background-image: url($url);
}
@mixin ghost($textAlign: left) {
	text-align: center;
	&:before {
		content: '';
		margin-right: -0.25em;
		display: inline-block;
		vertical-align: middle;
		height: 100%;
	}
	> div, form {
		position: relative;
		width: 100%;
		display: inline-block;
		vertical-align: middle;
		text-align: $textAlign;
		z-index: 1;
	}
}
@mixin cta($color, $font-size, $text-align) {
	display: inline-block;
	color: color($color);
	font-size: fs($font-size);
	text-align: $text-align;
	.no-touchevents &:hover, &:focus, &:active, &:visited { color: color($color); }
}

@mixin border ($style,  $sides...){
  @if ($style != "") {
    @if ($sides == "") {
      border: $style;
    } @else {
      @each $side in $sides {
       @if ($side == 'top' or
            $side == 'right' or
            $side == 'bottom' or
            $side == 'left') {
            border-#{$side}: $style;
        }
      }
    }
  }
}


$breakpoints: (
	'xs'  : ( min-width: 40em ), // 640px
  'sm'  : ( min-width: 48em ), // 768px
  'md'  : ( min-width: 64em ), // 1024px
  'lg'  : ( min-width: 90em )	 // 1440px
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} { @content; }
  }
  // If the key doesnt exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}
